// Code generated by protoc-gen-go.
// source: semanticconcept.proto
// DO NOT EDIT!

/*
Package nyt is a generated protocol buffer package.

It is generated from these files:
	semanticconcept.proto

It has these top-level messages:
	SemanticConceptResponse
	SemanticConceptResult
	SemanticConceptArticleList
	SemanticConceptArticle
*/
package nyt

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type SemanticConceptResponse struct {
	Status     string                   `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Copyright  string                   `protobuf:"bytes,2,opt,name=copyright" json:"copyright,omitempty"`
	NumResults uint32                   `protobuf:"varint,3,opt,name=num_results" json:"num_results,omitempty"`
	Results    []*SemanticConceptResult `protobuf:"bytes,4,rep,name=results" json:"results,omitempty"`
}

func (m *SemanticConceptResponse) Reset()         { *m = SemanticConceptResponse{} }
func (m *SemanticConceptResponse) String() string { return proto.CompactTextString(m) }
func (*SemanticConceptResponse) ProtoMessage()    {}

func (m *SemanticConceptResponse) GetResults() []*SemanticConceptResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type SemanticConceptResult struct {
	ArticleList *SemanticConceptArticleList `protobuf:"bytes,1,opt,name=article_list" json:"article_list,omitempty"`
}

func (m *SemanticConceptResult) Reset()         { *m = SemanticConceptResult{} }
func (m *SemanticConceptResult) String() string { return proto.CompactTextString(m) }
func (*SemanticConceptResult) ProtoMessage()    {}

func (m *SemanticConceptResult) GetArticleList() *SemanticConceptArticleList {
	if m != nil {
		return m.ArticleList
	}
	return nil
}

type SemanticConceptArticleList struct {
	Results []*SemanticConceptArticle `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	Total   uint32                    `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
}

func (m *SemanticConceptArticleList) Reset()         { *m = SemanticConceptArticleList{} }
func (m *SemanticConceptArticleList) String() string { return proto.CompactTextString(m) }
func (*SemanticConceptArticleList) ProtoMessage()    {}

func (m *SemanticConceptArticleList) GetResults() []*SemanticConceptArticle {
	if m != nil {
		return m.Results
	}
	return nil
}

type SemanticConceptArticle struct {
	Body   string `protobuf:"bytes,1,opt,name=body" json:"body,omitempty"`
	Byline string `protobuf:"bytes,2,opt,name=byline" json:"byline,omitempty"`
	Title  string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Url    string `protobuf:"bytes,4,opt,name=url" json:"url,omitempty"`
}

func (m *SemanticConceptArticle) Reset()         { *m = SemanticConceptArticle{} }
func (m *SemanticConceptArticle) String() string { return proto.CompactTextString(m) }
func (*SemanticConceptArticle) ProtoMessage()    {}

func init() {
}
